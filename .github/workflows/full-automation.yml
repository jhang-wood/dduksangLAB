# 전체 자동화 파이프라인 - dduksangLAB 통합 검증
name: Full Automation Pipeline

on:
  workflow_dispatch:
    inputs:
      mode:
        description: '실행 모드 선택'
        required: true
        default: 'full'
        type: choice
        options:
          - quick
          - full
          - custom
      agents:
        description: '실행할 에이전트 (custom 모드, 쉼표로 구분)'
        required: false
        default: 'qa,security,performance,devops'
      notification:
        description: 'Telegram 알림 전송'
        type: boolean
        default: true

env:
  NODE_VERSION: '20'

jobs:
  # 통합 자동화 워크플로우 실행
  full-automation:
    name: 🤖 통합 자동화 실행
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🚀 Execute Full Automation Workflow
        id: automation
        run: |
          # 실행 모드 설정
          MODE="${{ github.event.inputs.mode }}"
          AGENTS="${{ github.event.inputs.agents }}"
          
          echo "🤖 실행 모드: $MODE"
          echo "🔧 대상 에이전트: ${AGENTS:-'all'}"
          
          # 워크플로우 실행
          if [ "$MODE" = "custom" ] && [ ! -z "$AGENTS" ]; then
            npm run automation:workflow custom -- --agents="$AGENTS"
          elif [ "$MODE" = "quick" ]; then
            npm run automation:workflow:quick
          else
            npm run automation:workflow:full
          fi
        env:
          # 테스트 환경변수
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_TOSS_CLIENT_KEY: ${{ secrets.NEXT_PUBLIC_TOSS_CLIENT_KEY }}
          NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
          CRON_SECRET: ${{ secrets.CRON_SECRET }}
          TOSS_SECRET_KEY: ${{ secrets.TOSS_SECRET_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          N8N_WEBHOOK_URL: ${{ secrets.N8N_WEBHOOK_URL }}
        continue-on-error: false

      - name: 📊 Upload Automation Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: automation-reports
          path: |
            workflow-reports/
            security-reports/
            performance-reports/
          retention-days: 7

      - name: 📨 Send Success Notification
        if: success() && github.event.inputs.notification == 'true'
        run: |
          if [ ! -z "${{ secrets.TELEGRAM_BOT_TOKEN }}" ] && [ ! -z "${{ secrets.TELEGRAM_CHAT_ID }}" ]; then
            MESSAGE="✅ **dduksangLAB 전체 자동화 성공**
            
            🚀 **실행 정보:**
            • 모드: ${{ github.event.inputs.mode }}
            • 브랜치: ${{ github.ref_name }}
            • 커밋: ${{ github.sha }}
            
            👤 **실행자:** ${{ github.actor }}
            ⏰ **시간:** $(TZ='Asia/Seoul' date '+%Y-%m-%d %H:%M:%S KST')
            
            🔗 [상세 로그](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            
            🎉 모든 자동화 검증이 성공적으로 완료되었습니다!"
            
            curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
              -d "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}" \
              -d "text=$MESSAGE" \
              -d "parse_mode=Markdown" \
              -d "disable_web_page_preview=true"
          fi

      - name: 📨 Send Failure Notification
        if: failure() && github.event.inputs.notification == 'true'
        run: |
          if [ ! -z "${{ secrets.TELEGRAM_BOT_TOKEN }}" ] && [ ! -z "${{ secrets.TELEGRAM_CHAT_ID }}" ]; then
            MESSAGE="❌ **dduksangLAB 자동화 실패**
            
            🚨 **실행 정보:**
            • 모드: ${{ github.event.inputs.mode }}
            • 브랜치: ${{ github.ref_name }}
            • 커밋: ${{ github.sha }}
            
            👤 **실행자:** ${{ github.actor }}
            ⏰ **시간:** $(TZ='Asia/Seoul' date '+%Y-%m-%d %H:%M:%S KST')
            
            🔗 [오류 로그](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            
            ⚠️ 자동화 검증 중 문제가 발생했습니다. 로그를 확인해주세요."
            
            curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
              -d "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}" \
              -d "text=$MESSAGE" \
              -d "parse_mode=Markdown" \
              -d "disable_web_page_preview=true"
          fi

  # 야간 자동 실행 (매일 새벽 2시)
  nightly-automation:
    name: 🌙 야간 자동 검증
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🌙 Run Nightly Full Automation
        run: npm run automation:workflow:full
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_TOSS_CLIENT_KEY: ${{ secrets.NEXT_PUBLIC_TOSS_CLIENT_KEY }}
          NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
          CRON_SECRET: ${{ secrets.CRON_SECRET }}
          TOSS_SECRET_KEY: ${{ secrets.TOSS_SECRET_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          N8N_WEBHOOK_URL: ${{ secrets.N8N_WEBHOOK_URL }}

      - name: 📊 Upload Nightly Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: nightly-automation-reports
          path: |
            workflow-reports/
            security-reports/  
            performance-reports/
          retention-days: 30

# 매일 새벽 2시에 자동 실행
on:
  schedule:
    - cron: '0 2 * * *'  # 매일 새벽 2시 (UTC)